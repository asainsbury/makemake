---
- hosts: localhost
  gather_facts: false

  vars:
    update: true
    debug: true

    var1: "{{ boxes     | default(3) }}" 
    var2: "{{ start_ip  | default('1.1.1.10') }}"
    var3: "{{ root      | default('~/projects') }}"
    var4: "{{ title }}"



  tasks:    

    # We want to do the following to create a new project
      # set the root path to the project folder
      # take in the extra vars for the name of the project
      # possibly ask how many VM's to make.
      # possibly ask the group .
      # possibly ask the ip range, start and stop.

    # Then make the vagrant_vars file via jinja2 template
    # then copy ovder the files into the correct places
    # then finally run the initiation playbook to stand it all up?

    # So you run the play with "boxes=3 start_ip=1.1.1.10 box=centos7 title=test root=~/projects/ debug=true"


    # And then we make folders in ~/projects/test
    #  input,output,report,python,ansible,vagrant 

########################################################
# Input Vars Checking
# Must be defined before we continue
# Playbook exits with undef if not present
########################################################

    - name: Make sure we got an input for TITLE
      debug:
        msg: "You included this: {{var4}}"      


    - name: Debug the vars which we need on input
      debug:
        msg: "BOXES:{{var1}}; START:{{var2}}; ROOT:{{var3}}; TITLE:{{var4}}"
      when: debug is defined






    # - name: Check inventory paths exist and create if not
    #   file:
    #     path: "{{ host_path }}"
    #     state: directory

      # tags:
      #   - host_path

    # - name: Check that the host file exists
    #   stat:
    #     path: "{{ host_file }}"
    #   register: stat_result
    #   tags: host_file

    # - name: Create the file, if it doesnt exist already
    #   file:
    #     path: "{{ host_file }}"
    #     state: touch
    #   when: stat_result.stat.exists == False  
    #   tags: host_file
 

    # - name: Add hosts for vagrant into sshconfg
    #   blockinfile:
    #     path: "{{ssh_config}}"
    #     marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
         
    #     block: | 
    #       Host {{item.name}} *.test.local
    #         hostname {{item.ip}}
    #         StrictHostKeyChecking no
    #         UserKnownHostsFile=/dev/null
    #         User {{ssh_user}}
    #         LogLevel ERROR  
        
    #     state: "{{item.state}}"

    #   with_items:
    #     - "{{host_list}}"

    #   tags: sshconfg
  

    # - name: Add the Vagrant Boxes
    #   shell: 'vagrant box add {{item}} --insecure --provider virtualbox'
    #   register: result

    #   with_items:
    #     - "{{box_list}}"

    #   failed_when: "'A name is required' in result.stderr"
    #   when: update
    #   tags: box_add




