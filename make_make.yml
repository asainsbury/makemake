---
- hosts: localhost
  gather_facts: True
  become: false
  
  vars:

    debug: true

    # Just some mappings from the extra vars to some generic names.
    # Also added in some jinja2 filters as an example of how they work.
    var1: "{{ boxes     | default(3) | int }}" 
    var2: "{{ start_ip  | default('1.1.1.10') | ipaddr}}"
    var3: "{{ root      | default('~/projects/scripts/') }}"
    var4: "{{ title     | lower  | regex_replace(' ', '') }}"
    var5: "{{ files     | default(False)}}"
    var6: "{{ folders   | default(False)}}"
    var7: "{{ type      | default(centos7) }}"

    project: "{{ var3 }}/{{ var4 }}"

    # Add more boxes here:
    centos7:
      - 'centos/7'
      - 'https://vagrantcloud.com/centos/boxes/7'


  tasks:
    - name: Set the virtualenv python shim on MacOSX
      set_fact:
        ansible_python_interpreter: ~/.pyenv/shims/python
      when: ansible_distribution == 'MacOSX'
      tags: ['family']



    # We want to do the following to create a new project
      # set the root path to the project folder
      # take in the extra vars for the name of the project
      # possibly ask how many VM's to make.
      # possibly ask the group .
      # possibly ask the ip range, start and stop.

    # Then make the vagrant_vars file via jinja2 template
    # then copy ovder the files into the correct places
    # then finally run the initiation playbook to stand it all up?

    # So you run the play with "boxes=3 start_ip=1.1.1.10 box=centos7 title=test root=~/projects/ debug=true"


    # And then we make folders in ~/projects/test
    #  input,output,report,python,ansible,vagrant 

########################################################
# Input Vars Checking
# Must be defined before we continue
# Playbook exits with undef if not present
########################################################

    - name: Make sure we got an vaild IPv4 Addr {{var2}}
      debug:
        msg: "You included this: {{var2}}"       
      failed_when: var2 == False


    - name: Make sure we got an input for TITLE
      debug:
        msg: "You included this: {{var4}}"


    - name: Debug the vars which we need on input
      debug:
        msg: "BOXES:{{var1 }}; START:{{var2}}; ROOT:{{var3}}; TITLE:{{var4}} PROJECT: {{project}}"
      when: debug == true


    - name: Debug the Control Boolean
      debug:
        msg: "Copy Files:{{var5 }}; Create Folders:{{var6}}"
      when: debug == true



########################################################
# Create Path Structure
########################################################

    - name: Create the project directory structure
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{project}}"
        - "{{project}}/input"
        - "{{project}}/output"
        - "{{project}}/report"
        - "{{project}}/ansible"
        - "{{project}}/ansible/roles"
        - "{{project}}/ansible/group_vars"
        - "{{project}}/ansible/host_vars"
        - "{{project}}/ansible/inventory"
        - "{{project}}/vagrant"
        - "{{project}}/python"
        - "{{project}}/python/log"
        - "{{project}}/log"

      tags: ['folders']


########################################################
# Copy over the files
########################################################

    - name: Copy over the Vagrant files
      copy:
        src: "{{ item }}"
        dest: "{{project}}/vagrant"  
      with_items:
        - files/Vagrantfile
        - files/bootstrap.yml
        - files/id_rsa
        - files/id_rsa.pub
      tags: ['files', 'vagrant']


    - name: Copy over the Ansible files
      copy:
        src: "{{ item }}"
        dest: "{{project}}/ansible"  
      with_items:
        - files/ansible.cfg
      tags: ['files', 'python']     


    - name: Touch a bunch of files to make sure they exists
      file:
        path: "{{ item }}"
        state: touch
      with_items:
        - "{{project}}/ansible/inventory/hosts"
        - "{{project}}/ansible/group_vars/all.yml"
        - "{{project}}/README.md"
        - "{{project}}/.gitignore"
        - "{{project}}/python/requirements.txt"
        - "{{project}}/ansible/README.md"
        - "{{project}}/python/README.md"
        - "{{project}}/vagrant/README.md"
        - "{{project}}/vagrant/vagrant_vars.yml"

########################################################
# Jinja2 template to make the vagrant vars
########################################################
    - name: Template a file to /etc/files.conf
      template:
        src: files/make_vars.j2
        dest: "{{project}}/vagrant/vagrant_vars.yml"
      tags: ['vars', jinja]

      
    # - name: Check that the host file exists
    #   stat:
    #     path: "{{ host_file }}"
    #   register: stat_result
    #   tags: host_file

    # - name: Create the file, if it doesnt exist already
    #   file:
    #     path: "{{ host_file }}"
    #     state: touch
    #   when: stat_result.stat.exists == False  
    #   tags: host_file
 

    # - name: Add hosts for vagrant into sshconfg
    #   blockinfile:
    #     path: "{{ssh_config}}"
    #     marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
         
    #     block: | 
    #       Host {{item.name}} *.test.local
    #         hostname {{item.ip}}
    #         StrictHostKeyChecking no
    #         UserKnownHostsFile=/dev/null
    #         User {{ssh_user}}
    #         LogLevel ERROR  
        
    #     state: "{{item.state}}"

    #   with_items:
    #     - "{{host_list}}"

    #   tags: sshconfg
  

    # - name: Add the Vagrant Boxes
    #   shell: 'vagrant box add {{item}} --insecure --provider virtualbox'
    #   register: result

    #   with_items:
    #     - "{{box_list}}"

    #   failed_when: "'A name is required' in result.stderr"
    #   when: update
    #   tags: box_add




